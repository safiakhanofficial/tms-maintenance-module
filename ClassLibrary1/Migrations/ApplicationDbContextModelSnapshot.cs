// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.MaintenanceActivity", b =>
                {
                    b.Property<int>("MaintenanceActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaintenanceActivityId"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaintenanceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("MaintenanceActivityId");

                    b.HasIndex("VehicleId");

                    b.ToTable("MaintenanceActivities");

                    b.HasData(
                        new
                        {
                            MaintenanceActivityId = 1,
                            Date = new DateTime(2024, 10, 30, 16, 57, 29, 321, DateTimeKind.Local).AddTicks(4809),
                            Description = "Changed oil",
                            MaintenanceType = "Oil Change",
                            Notes = "Used synthetic oil.",
                            VehicleId = 1
                        },
                        new
                        {
                            MaintenanceActivityId = 2,
                            Date = new DateTime(2024, 9, 30, 16, 57, 29, 321, DateTimeKind.Local).AddTicks(4828),
                            Description = "Changed tyres",
                            MaintenanceType = "Tyre Change",
                            Notes = "No issues.",
                            VehicleId = 1
                        },
                        new
                        {
                            MaintenanceActivityId = 3,
                            Date = new DateTime(2024, 8, 30, 16, 57, 29, 321, DateTimeKind.Local).AddTicks(4838),
                            Description = "Checked brakes",
                            MaintenanceType = "Brake Inspection",
                            Notes = "Brakes in good condition.",
                            VehicleId = 2
                        });
                });

            modelBuilder.Entity("DAL.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            VehicleId = 1,
                            Name = "Toyota Camry"
                        },
                        new
                        {
                            VehicleId = 2,
                            Name = "Toyota Fortuner"
                        });
                });

            modelBuilder.Entity("DAL.Models.MaintenanceActivity", b =>
                {
                    b.HasOne("DAL.Models.Vehicle", "Vehicle")
                        .WithMany("MaintenanceActivities")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("DAL.Models.Vehicle", b =>
                {
                    b.Navigation("MaintenanceActivities");
                });
#pragma warning restore 612, 618
        }
    }
}
